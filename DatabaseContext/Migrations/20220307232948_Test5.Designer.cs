// <auto-generated />
using System;
using DatabaseContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace DatabaseContext.Migrations
{
    [DbContext(typeof(DatabaseContexts))]
    [Migration("20220307232948_Test5")]
    partial class Test5
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("DatabaseModels.City", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("id_city")
                        .HasColumnType("integer");

                    b.Property<string>("title")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("City");
                });

            modelBuilder.Entity("DatabaseModels.Follower", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("bdate")
                        .HasColumnType("text");

                    b.Property<bool>("can_access_closed")
                        .HasColumnType("boolean");

                    b.Property<int?>("cityid")
                        .HasColumnType("integer");

                    b.Property<string>("first_name")
                        .HasColumnType("text");

                    b.Property<bool>("is_closed")
                        .HasColumnType("boolean");

                    b.Property<string>("last_name")
                        .HasColumnType("text");

                    b.Property<int?>("occupationid")
                        .HasColumnType("integer");

                    b.Property<int>("sex")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("cityid");

                    b.HasIndex("occupationid");

                    b.ToTable("Follower");
                });

            modelBuilder.Entity("DatabaseModels.Occupation", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("Occupation");
                });

            modelBuilder.Entity("DatabaseModels.Party", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Party");
                });

            modelBuilder.Entity("DatabaseModels.Subscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("FollowerId")
                        .HasColumnType("integer");

                    b.Property<int>("PartyId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("FollowerId");

                    b.HasIndex("PartyId");

                    b.ToTable("Subscription");
                });

            modelBuilder.Entity("DatabaseModels.Follower", b =>
                {
                    b.HasOne("DatabaseModels.City", "city")
                        .WithMany()
                        .HasForeignKey("cityid");

                    b.HasOne("DatabaseModels.Occupation", "occupation")
                        .WithMany()
                        .HasForeignKey("occupationid");

                    b.Navigation("city");

                    b.Navigation("occupation");
                });

            modelBuilder.Entity("DatabaseModels.Subscription", b =>
                {
                    b.HasOne("DatabaseModels.Follower", "Follower")
                        .WithMany()
                        .HasForeignKey("FollowerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DatabaseModels.Party", "Party")
                        .WithMany()
                        .HasForeignKey("PartyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Follower");

                    b.Navigation("Party");
                });
#pragma warning restore 612, 618
        }
    }
}
